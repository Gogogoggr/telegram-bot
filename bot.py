import time
time.sleep(10)  # –ü–∞—É–∑–∞ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
print("üü¢ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
import logging
import time
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    filters,
    CallbackContext
)
from telegram.error import TelegramError
from telegram.constants import ParseMode

# –í–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
BOT_TOKEN = "8142368589:AAFdxP0kXOxZYTt3bB-kI-W3woJJ6fG7L-U"
ADMIN_CHAT_ID = 1017061285
SOURCE_CHANNEL_ID = -1002569423833
DESTINATION_CHANNEL_IDS = [
    -1002840637729, -1002897564090, -1002601899784,
    -1002759975602, -1002685685567, -1002792624987,
    -1002355454394
]

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO,
    filename='bot.log'  # –õ–æ–≥–∏ –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è –≤ —Ñ–∞–π–ª
)
logger = logging.getLogger(__name__)

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
bot_active = False

def get_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    return ReplyKeyboardMarkup([
        ["üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞", "üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞"],
        ["‚ôªÔ∏è –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å", "üìä –°—Ç–∞—Ç—É—Å"]
    ], resize_keyboard=True)

async def start(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    if update.effective_chat.id != ADMIN_CHAT_ID:
        return
    
    await update.message.reply_text(
        "ü§ñ –ë–æ—Ç –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_keyboard()
    )

async def start_bot(update: Update, context: CallbackContext):
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    global bot_active
    bot_active = True
    await update.message.reply_text("üü¢ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!", reply_markup=get_keyboard())

async def stop_bot(update: Update, context: CallbackContext):
    """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞"""
    global bot_active
    bot_active = False
    await update.message.reply_text("üî¥ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!", reply_markup=get_keyboard())

async def restart_bot(update: Update, context: CallbackContext):
    """–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    global bot_active
    bot_active = False
    await update.message.reply_text("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é...")
    bot_active = True
    await update.message.reply_text("üü¢ –ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!", reply_markup=get_keyboard())

async def show_status(update: Update, context: CallbackContext):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞"""
    status = "üü¢ –ê–ö–¢–ò–í–ï–ù" if bot_active else "üî¥ –ù–ï–ê–ö–¢–ò–í–ï–ù"
    await update.message.reply_text(
        f"üìä –°—Ç–∞—Ç—É—Å: {status}\n"
        f"–ö–∞–Ω–∞–ª-–∏—Å—Ç–æ—á–Ω–∏–∫: {SOURCE_CHANNEL_ID}\n"
        f"–ü–æ–ª—É—á–∞—Ç–µ–ª–µ–π: {len(DESTINATION_CHANNEL_IDS)}",
        reply_markup=get_keyboard()
    )

async def forward_post(update: Update, context: CallbackContext):
    """–ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π"""
    global bot_active
    if not bot_active or not update.channel_post:
        return
    
    message = update.channel_post
    for dest_id in DESTINATION_CHANNEL_IDS:
        try:
            if message.photo:
                await message.copy(dest_id)
            elif message.text:
                await context.bot.send_message(
                    chat_id=dest_id,
                    text=message.text,
                    parse_mode=ParseMode.HTML if message.entities else None
                )
            logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ –≤ {dest_id}")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞: {str(e)}")

def setup_application():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"""
    application = Application.builder().token(BOT_TOKEN).build()
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.Regex("^üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞$"), start_bot))
    application.add_handler(MessageHandler(filters.Regex("^üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞$"), stop_bot))
    application.add_handler(MessageHandler(filters.Regex("^‚ôªÔ∏è –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å$"), restart_bot))
    application.add_handler(MessageHandler(filters.Regex("^üìä –°—Ç–∞—Ç—É—Å$"), show_status))
    application.add_handler(
        MessageHandler(
            filters.Chat(SOURCE_CHANNEL_ID) & 
            (filters.PHOTO | filters.TEXT),
            forward_post
        )
    )
    return application

def run_bot():
    """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª —Ä–∞–±–æ—Ç—ã"""
    while True:
        try:
            logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
            application = setup_application()
            application.run_polling()
        except Exception as e:
            logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
            time.sleep(60)  # –ü–∞—É–∑–∞ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º

if __name__ == '__main__':
    run_bot()